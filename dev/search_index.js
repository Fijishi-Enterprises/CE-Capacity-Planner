var documenterSearchIndex = {"docs":
[{"location":"README_TX_1/#TX-1-1","page":"TX-1","title":"TX-1","text":"","category":"section"},{"location":"README_TX_1/#","page":"TX-1","title":"TX-1","text":"Single node of a power grid in Texas, no existing capacity","category":"page"},{"location":"README_TX_1/#","page":"TX-1","title":"TX-1","text":"Data from Merrick et al. 2016","category":"page"},{"location":"README_TX_1/#Cost-Data-1","page":"TX-1","title":"Cost Data","text":"","category":"section"},{"location":"README_TX_1/#","page":"TX-1","title":"TX-1","text":"Implemented with PV-price 0.5 /W","category":"page"},{"location":"README_TX_1/#","page":"TX-1","title":"TX-1","text":"fix: 2.388E+3 /MW\ncap: 5.16E+5 /MW","category":"page"},{"location":"README_TX_1/#","page":"TX-1","title":"TX-1","text":"##Other Alternatively for price of 1.0/W edit .csv files and replace costs with:","category":"page"},{"location":"README_TX_1/#","page":"TX-1","title":"TX-1","text":"fix: 4.776E+3 /MW  cap: 1.032E+6 /MW","category":"page"},{"location":"README_TX_1/#","page":"TX-1","title":"TX-1","text":"Assuptions for transformation:","category":"page"},{"location":"README_TX_1/#","page":"TX-1","title":"TX-1","text":"demand mulitiplied with 1.48\nsolar devided by 1000","category":"page"},{"location":"opt_cep_examples/#Examples-1","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"Here, we present some examples.","category":"page"},{"location":"opt_cep_examples/#CO2-Limitation-1","page":"Examples","title":"CO2-Limitation","text":"","category":"section"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"using CapacityExpansion\nusing Clp\noptimizer=Clp.Optimizer #select an Optimize\nstate=\"GER_1\" #select state\nts_input_data = load_timeseries_data_provided(state; T=24)\ncep_data = load_cep_data_provided(state)\nts_clust_data = run_clust(ts_input_data;method=\"kmeans\",representation=\"centroid\",n_init=5,n_clust=5).clust_data\n# tweak the CO2 level\nco2_result = run_opt(ts_clust_data,cep_data,optimizer;descriptor=\"co2\",limit_emission=Dict{String,Number}(\"CO2/electricity\"=>50))","category":"page"},{"location":"opt_cep_examples/#Slack-variables-included-1","page":"Examples","title":"Slack variables included","text":"","category":"section"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"slack_result = run_opt(ts_clust_data,cep_data,optimizer;descriptor=\"slack\",lost_load_cost=Dict{String,Number}(\"electricity\"=>1e6), lost_emission_cost=Dict{String,Number}(\"CO2\"=>700))","category":"page"},{"location":"opt_cep_examples/#Simple-storage-1","page":"Examples","title":"Simple storage","text":"","category":"section"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"note: Note\nIn simple or intradaystorage the storage level is enforced to be the same at the beginning and end of each day. The variable 'INTRASTORAGE' is tracking the storage level within each day of the representative periods.","category":"page"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"simplestor_result = run_opt(ts_clust_data,cep_data,optimizer;descriptor=\"simple storage\",storage=\"simple\",conversion=true)","category":"page"},{"location":"opt_cep_examples/#Seasonal-storage-1","page":"Examples","title":"Seasonal storage","text":"","category":"section"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"note: Note\nIn seasonalstorage the storage level is enforced to be the same at the beginning and end of the original time-series. The new variable 'INTERSTORAGE' tracks the storage level throughout the days (or periods) of the original time-series. The variable 'INTRASTORAGE' is tracking the storage level within each day of the representative periods.","category":"page"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"seasonalstor_result = run_opt(ts_clust_data,cep_data,optimizer;descriptor=\"seasonal storage\",storage=\"seasonal\",conversion=true))","category":"page"},{"location":"opt_cep_examples/#Second-stage-operational-validation-step-1","page":"Examples","title":"Second stage operational validation step","text":"","category":"section"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"design_result = run_opt(ts_clust_data,cep_data,optimizer;descriptor=\"design&operation\", limit_emission=Dict{String,Number}(\"CO2/electricity\"=>50))\n#the design variables (here the capacity_factors) are calculated from the first optimization\ndesign_variables=get_cep_design_variables(design_result)\n# Use the design variable results for the operational (dispatch problem) run\noperation_result = run_opt(ts_input_data,cep_data,design_result.config,design_variables,optimizer;lost_load_cost=Dict{String,Number}(\"electricity\"=>1e6), lost_emission_cost=Dict{String,Number}(\"CO2\"=>700))","category":"page"},{"location":"opt_cep_examples/#Plotting-Capacities-1","page":"Examples","title":"Plotting Capacities","text":"","category":"section"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"co2_result = run_opt(ts_clust_data,cep_data,optimizer;descriptor=\"co2\",limit_emission=Dict{String,Number}(\"CO2/electricity\"=>500)) #hide\n\n\n# use the get variable set in order to get the labels: indicate the variable as \"CAP\" and the set-number as 1 to receive those set values\nvariable=co2_result.variables[\"CAP\"]\nlabels=axes(variable,\"tech\")\n\ndata=variable[:,:,\"germany\"]\n# use the data provided for a simple bar-plot without a legend\nbar(data,title=\"Cap\", xticks=(1:length(labels),labels),legend=false, ylabel=\"Capacity [MW]\", xlabel=\"technologies\", color=\"orange\")","category":"page"},{"location":"opt_cep_examples/#","page":"Examples","title":"Examples","text":"(Image: Plot)","category":"page"},{"location":"results_opt/#Result-1","page":"Result","title":"Result","text":"","category":"section"},{"location":"results_opt/#","page":"Result","title":"Result","text":"Here, we describe the optimization result.","category":"page"},{"location":"results_opt/#Types-1","page":"Result","title":"Types","text":"","category":"section"},{"location":"results_opt/#","page":"Result","title":"Result","text":"The optimization results are provided in an OptResult struct:","category":"page"},{"location":"results_opt/#","page":"Result","title":"Result","text":"OptResult","category":"page"},{"location":"results_opt/#CapacityExpansion.OptResult","page":"Result","title":"CapacityExpansion.OptResult","text":"  OptResult{status::Symbol,\n            objective::Float64,\n            variables::Dict{String,Any},\n            sets::Dict{String,Dict{String,Array}},\n            config::Dict{String,Any},\n            info::Dict{String,Any}}\n\nThe result of an optimized model is organized as an OptResult struct:\n\nstatus: Symbol about the solution status of the model in normal cases :OPTIMAL\nobjective: Value of the objective function\nvariables: Dictionary with each variables in form of OptVariable structs as entries. For details on indexing the OptVariables see the OptVariable documentation\nsets: Dictionary with each set as an entry\nconfig: The configuration of the model setup - for more detail see tye run_opt documentation that sets the config up\ninfo: Holds information about the model. E.g. info[\"model\"] contains the exact equations used in the model.\n\nSets\n\nThe sets are setup as a dictionary and organized as set[tech_name][tech_group]=[elements...], where:\n\ntech_name is the name of the dimension like e.g. tech, or node\ntech_group is the name of a group of elements within each dimension like e.g. [\"all\", \"generation\"]. The group 'all' always contains all elements of the dimension\n[elements...] is the Array with the different elements like [\"pv\", \"wind\", \"gas\"]\n\nname description\nlines transmission lines connecting the nodes\nnodes spacial energy system nodes\ntech generation, conversion, storage, and transmission technologies\ncarrier carrier that an energy balance is calculated for electricity, hydrogen...\nimpact impact categories like EUR or USD, CO 2 âˆ’ eq., ...\naccount fixed costs for installation and yearly expenses, variable costs\ninfrastruct infrastructure status being either new or existing\ntime K numeration of the representative periods\ntime T period numeration of the time intervals within a period\ntime T point numeration of the time points within a period\ntime I period numeration of the time invervals of the full input data periods\ntime I point numeration of the time points of the full input data periods\ndir transmission direction of the flow uniform with or opposite to the lines direction\n\nVariables\n\nname type dimensions unit description\nCOST cv [account,impact,tech] EUR/USD, LCA-categories Costs\nCAP dv [tech,infrastruct,node] MW Capacity\nGEN ov [tech,carrier,t,k,node] MW Generation\nSLACK sv [carrier,t,k,node] MW Power gap, not provided by installed CAP\nLL sv [carrier] MWh LoastLoad Generation gap, not provided by installed CAP\nLE sv [impact] LCA-categories LoastEmission Amount of emissions that installed CAP crosses the Emission constraint\nINTRASTOR ov [tech,carrier,t,k,node] MWh Storage level within a period\nINTERSTOR ov [tech,carrier,i,node] MWh Storage level between periods of the full time series\nFLOW ov [tech,carrier,dir,t,k,line] MW Flow over transmission line\nTRANS ov [tech,infrastruct,lines] MW maximum capacity of transmission lines\n\n\n\n\n\n","category":"type"},{"location":"results_opt/#Equations-1","page":"Result","title":"Equations","text":"","category":"section"},{"location":"results_opt/#","page":"Result","title":"Result","text":"note: Note\nThe model tracks how it is setup and which equations are used. This can help you to understand the models exact configuration without looking up the source code.","category":"page"},{"location":"results_opt/#","page":"Result","title":"Result","text":"The information of the model setup can be checked out the following way:","category":"page"},{"location":"results_opt/#","page":"Result","title":"Result","text":"using CapacityExpansion\nusing Clp\noptimizer=Clp.Optimizer\nstate=\"GER_1\"\nyears=[2016]\nts_input_data = load_timeseries_data_provided(state;T=24, years=years)\ncep_data = load_cep_data_provided(state)\nts_clust_data = run_clust(ts_input_data;method=\"hierarchical\",representation=\"centroid\",n_init=1,n_clust=5).clust_data","category":"page"},{"location":"results_opt/#","page":"Result","title":"Result","text":"result = run_opt(ts_clust_data,cep_data,optimizer;descriptor=\"Model Name\")\nresult.info[\"model\"]","category":"page"},{"location":"results_opt/#Variables-in-Result-1","page":"Result","title":"Variables in Result","text":"","category":"section"},{"location":"results_opt/#","page":"Result","title":"Result","text":"All variables are provided as dense OptVariable structs and can be indexed as explained in Data Types. The variables can be of different type as explained in Variables. The different groups of variables can be extracted from the OptResult based on the variable_type:","category":"page"},{"location":"results_opt/#","page":"Result","title":"Result","text":"get_cep_variables\nget_cep_slack_variables\nget_cep_design_variables","category":"page"},{"location":"results_opt/#CapacityExpansion.get_cep_variables","page":"Result","title":"CapacityExpansion.get_cep_variables","text":"get_cep_variables(opt_result::OptResult, variable_type::String)\n\nThe variables can be of different type. The different groups of variables can be extracted from the OptResult based on the variable_type: Returns all variables which types match the String variable_type\n\n\n\n\n\n","category":"function"},{"location":"results_opt/#CapacityExpansion.get_cep_slack_variables","page":"Result","title":"CapacityExpansion.get_cep_slack_variables","text":"get_cep_slack_variables(opt_result::OptResult)\n\nReturns all slack variables in this opt_result mathing the type \"sv\"\n\n\n\n\n\n","category":"function"},{"location":"results_opt/#CapacityExpansion.get_cep_design_variables","page":"Result","title":"CapacityExpansion.get_cep_design_variables","text":"get_cep_design_variables(opt_result::OptResult)\n\nReturns all design variables in this opt_result matching the type \"dv\" Additionally you can add capacity factors, which scale the design variables by multiplying it with the value in the Dict\n\n\n\n\n\n","category":"function"},{"location":"results_opt/#","page":"Result","title":"Result","text":"The extraction of design variables is e.g. necessary for a Second stage operational validation step, which validates the energy system design on a different time series.","category":"page"},{"location":"results_opt/#Printing-information-about-the-result-1","page":"Result","title":"Printing information about the result","text":"","category":"section"},{"location":"results_opt/#","page":"Result","title":"Result","text":"The function text_limit_emission allows to print an information about all the emission limits applied:","category":"page"},{"location":"results_opt/#","page":"Result","title":"Result","text":"CapacityExpansion.text_limit_emission","category":"page"},{"location":"results_opt/#CapacityExpansion.text_limit_emission","page":"Result","title":"CapacityExpansion.text_limit_emission","text":"text_limit_emission(limit_emission::Dict{String,Dict{String,Number}})\n\nReturn text with the information of the limit_emission as a text\n\n\n\n\n\n","category":"function"},{"location":"teaching/#Teaching-1","page":"Teaching","title":"Teaching","text":"","category":"section"},{"location":"teaching/#","page":"Teaching","title":"Teaching","text":"This package has some characteristics that make it attractive for teaching. Those characteristics are:","category":"page"},{"location":"teaching/#","page":"Teaching","title":"Teaching","text":"the provided Homework: Modeling Exercise (and the on request available grading sheet) simplifies the preparation for teaching assistants and requires no upfront julia-knowledge of the students,\neasy adaptation of many settings that allows for interesting questions,\ninput data is provided for multiple regions and years,\nthe package is purely based on OpenSource code with no extra fees, and\nthe programming language julia and the integrated time-series aggregation enables fast solving.","category":"page"},{"location":"teaching/#","page":"Teaching","title":"Teaching","text":"The package is used in the course:","category":"page"},{"location":"teaching/#","page":"Teaching","title":"Teaching","text":"MS&E 394 - Advanced Methods in Modeling for Climate and Energy Policy at Stanford University","category":"page"},{"location":"README_CA_14/#CA-14-1","page":"CA-14","title":"CA-14","text":"","category":"section"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"California (modeling CAISO) 10-node model, no existing capacity (currently not published) (Image: Plot)","category":"page"},{"location":"README_CA_14/#Time-Series-1","page":"CA-14","title":"Time Series","text":"","category":"section"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"el_demand: http://www.caiso.com/planning/Pages/ReliabilityRequirements/Default.aspx#Historical\nsolar: \"RenewableNinja\",  \"Open Power System Data. 2018. Data Package Time series. Version 2018-06-30. https://doi.org/10.25832/timeseries/2018-06-30. (Primary data from various sources, for a complete list see URL).\" (dataset=\"merra2\",systemloss = 10,tracking = 1,tilt = 35,azim = 180)\nwind: \"RenewableNinja\":  \"Open Power System Data. 2018. Data Package Time series. Version 2018-06-30. https://doi.org/10.25832/time_series/2018-06-30. (Primary data from various sources, for a complete list see URL).\"; average hub height in 2016: 80m https://www.eia.gov/todayinenergy/detail.php?id=33912#tab1","category":"page"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"(capacity = 1.0,height = 80,turbine = \"Vestas+V80+2000\",dataset=\"merra2\",systemloss = 10), locations based on current wind-farms, if available in region (https://www.energy.ca.gov/maps/renewable/wind/WindResourceAreaCA_Statewide.pdf)","category":"page"},{"location":"README_CA_14/#Cost-Data-1","page":"CA-14","title":"Cost Data","text":"","category":"section"},{"location":"README_CA_14/#General-1","page":"CA-14","title":"General","text":"","category":"section"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"economic lifetime T: NREL\ncost of capital (WACC), r: NREL","category":"page"},{"location":"README_CA_14/#cap-costs-1","page":"CA-14","title":"cap-costs","text":"","category":"section"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"wind, pv, coal, gas, oil, bat: NREL\ntrans: !Costs for transmission expansion are per MW*km!: \"Zielkonflikte der Energiewende - Life Cycle Assessment der Dekarbonisierung Deutschlands durch sektorenÃ¼bergreifende Infrastrukturoptimierung\", Reinert, 2018\nh2: \"Shared Capacity and Levelized Cost with Application to Power-to-Gas Technology\", Glenk, 2019","category":"page"},{"location":"README_CA_14/#fix-costs-1","page":"CA-14","title":"fix-costs","text":"","category":"section"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"wind, pv, gas, bat, h2, oil, coal: NREL\ntrans: assumption no fix costs","category":"page"},{"location":"README_CA_14/#var-costs-1","page":"CA-14","title":"var-costs","text":"","category":"section"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"pv, wind, coal, gas, oil: NREL\ntrans: assumption no var costs\nbat, h2: assumption of minimal var costs to avoid charge and discharge in same hour in case of energy excess","category":"page"},{"location":"README_CA_14/#LCIA-Recipe-H-Midpoint,-GWP-100a-1","page":"CA-14","title":"LCIA Recipe H Midpoint, GWP 100a","text":"","category":"section"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"cap - construction","category":"page"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"pv: Jungbluth Niels, ESU-services, photovoltaic plant construction, 570kWp, multi-Si, on open ground, GLO, cut-off by classification, ecoinvent database version 3.3\nwind: Christian Bauer, Paul Scherrer Institute, wind power plant, 800kW, fixed parts [unit], GLO, cut-off by classification, ecoinvent database version 3.3, Christian Bauer, Paul Scherrer Institute, wind power plant, 800kW, moving parts [unit], GLO, cut-off by classification, ecoinvent database version 3.3\ntrans: R. Jorge, T. Hawkins, und E. Hertwich. Life cycle assessment of electricity transmission and distributionâ€”part 1: Power lines and cables. The International Journal of Life Cycle Assessment, 17(1):9â€“15, 2012. DOI: 10.1007/s11367-011-0335-1.\ncoal: Christian Bauer, Paul Scherrer Institute, hard coal power plant construction, 500MW, GLO, cut-off by classification, ecoinvent database version 3.3; Karin Treyer, Paul Scherrer Institute, electricity production, lignite, DE, cut-off by classification, ecoinvent database version 3.3\ngas: Thomas Heck, Paul Scherrer Institute, gas power plant construction, 300MW electrical, GLO, cut-off by classification, ecoinvent database version 3.3\noil: Niels Jungbluth, ESU-services, oil power plant construction, 500MW, RER (Europe), cut-off by classification, ecoinvent database version 3.3\nbat_e: Dominic Notter, EidgenÃ¶ssische MaterialprÃ¼f- und -forschungsanstalt, battery cell production, Li-ion, CN (China), cut-off by classification, ecoinvent database version 3.4 ;5.4933 kg CO2-Eq per 0.106 kWh\nh2_in: Alex Primas, ETH ZÃ¼rich, fuel cell production, polymer electrolyte membrane, 2kW electrical, future, CH, cut-off by classification, ecoinvent database version 3.3","category":"page"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"var - Electric power generation, transmission and distribution","category":"page"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"coal: Karin Treyer, Paul Scherrer Institute, electricity production, lignite, DE, cut-off by classification, ecoinvent database version 3.3\ngas: Karin Treyer, Paul Scherrer Institute, electricity production, natural gas, conventional power plant, DE, cut-off by classification, ecoinvent database version 3.3\noil: Karin Treyer, Paul Scherrer Institute, electricity production, oil, DE, cut-off by classification, ecoinvent database version 3.3","category":"page"},{"location":"README_CA_14/#Other-1","page":"CA-14","title":"Other","text":"","category":"section"},{"location":"README_CA_14/#","page":"CA-14","title":"CA-14","text":"trans: efficiency is 0.9995 per km\nstorage: efficiencies are in efficiency per month\nstorage hydrogen: referenced in MWh with lower calorific value 33.32 kWh/kg \"DIN 51850: Brennwerte und Heizwerte gasfÃ¶rmiger Brennstoffe\" 1980\nh2_in, h2_out: Sunfire process\nh2_e: Cavern","category":"page"},{"location":"csv_structure/#Provided-Data-and-Personal-Data-Setup-1","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"","category":"section"},{"location":"csv_structure/#Units-1","page":"Provided Data & Personal Data Setup","title":"Units","text":"","category":"section"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"Timestep (input data) - h\nPower - MW\nEnergy - MWh\nlength - km","category":"page"},{"location":"csv_structure/#Provided-Data-1","page":"Provided Data & Personal Data Setup","title":"Provided Data","text":"","category":"section"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"The package provides data for:","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"name nodes lines years tech\nGER-1 1 â€“ germany as single node none 2006-2016 Pv, wind, coal, oil, gas, bat-e, bat-in, bat-out, h2-e, h2-in, h2-out, trans\nGER-18 18 â€“ dena-zones within germany 49 2006-2016 Pv, wind, coal, oil, gas, bat-e, bat-in, bat-out, h2-e, h2-in, h2-out, trans\nCA-1 1 - california as single node none 2014-2017 Pv, wind, coal, oil, gas, bat-e, bat-in, bat-out, h2-e, h2-in, h2-out, trans\nCA-14 14 â€“ multiple nodes within CA (no installed capacities currently) 23 2014-2017 Pv, wind, coal, oil, gas, bat-e, bat-in, bat-out, h2-e, h2-in, h2-out, trans\nTX-1 1 â€“ single node within Texas none 2008 Pv, wind, coal, nuc, gas, bat-e, bat-in, bat-out","category":"page"},{"location":"csv_structure/#Personal-Data-Setup-1","page":"Provided Data & Personal Data Setup","title":"Personal Data Setup","text":"","category":"section"},{"location":"csv_structure/#Folder-Structure-1","page":"Provided Data & Personal Data Setup","title":"Folder Structure","text":"","category":"section"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"costs.csv\nnodes.csv\ntechs.yml\nlines.csv - optional\nTS - subfolder containing time-series-data\n[timeseries name].csv","category":"page"},{"location":"csv_structure/#Time-Series-data-1","page":"Provided Data & Personal Data Setup","title":"Time Series data","text":"","category":"section"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"Timestamp year [nodes...]\n[some iterator] relative value of installed capacity for renewables or absolute values for demand or so \n... ... ","category":"page"},{"location":"csv_structure/#costs.csv-1","page":"Provided Data & Personal Data Setup","title":"costs.csv","text":"","category":"section"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"note: Note\nThe different LCA-impact category columns define the impact-set. The different years within the column year define the year-set.","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"tech year account [currency] [LCA-Impact categories...]\n[tech] year of this price cap or fix or var Cost per unit Power(MW) or Energy (MWh) Emissions per unit Power(MW) or Energy (MWh)...\n... ... ... ... ...","category":"page"},{"location":"csv_structure/#nodes.csv-1","page":"Provided Data & Personal Data Setup","title":"nodes.csv","text":"","category":"section"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"note: Note\nThe different nodes within the column node define the node-set","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"node region infrastruct lon lat [techs...]\n[node...] region of this node ex - existing or lim - limiting capacity Latitude in Â° Longitude in Â° installed capacity of each tech at this node in MW or MWh\n... ... ... ... ... ","category":"page"},{"location":"csv_structure/#techs.yml-1","page":"Provided Data & Personal Data Setup","title":"techs.yml","text":"","category":"section"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"note: Note\nThe technologies within the group techs define the tech-set","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"note: Note\nThe currently supported technology-groups aredemand: For example the electricity demand\nnon_dispatchable_generation: For generation technologies like e.g. PV, wind\ndispatchable_generation: For generation technologies like gas\nstorage: A technology that stores e.g. electricity or hydrogen\nconversion: A technology that converts from one carrier to another\ntransmission: For transmission technologies that have no capacity (CAP) per node, but capacities (TRANS)  per line","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"note: Note\nThe implementation of storage typically needs the conversion from one carrier like electricity to another carrier like hydrogen. The integration of a carrier technology allows more complex energy systems. A single storage technology like hydrogen can be connected with one technology that converts electricity to hydrogen and another technology that runs a solar powered electrolysis.","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"techs.yml needs to have the following structure:","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"tech_groups: defines parent groups for techs or other tech_groups\ntechs: defines the technologies, the elements are used to declare the dimension tech","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"We allow technologies to have parents to reduce unnecessary and mistake enabling repitions within the techs.yml-file. The information of the single techs is combined with the information provided from their parent techgroups. One technology can have multiple techgroups, if the parant has a parant. The combined information must contain:","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"name: A detailed description of the technology\ntech_group: a technology-group that the technology belongs to. Groups can be: demand, generation, dispatchable_generation, non_dispatchable_generation, storage, conversion, transmission\nplant_lifetime: the physical expected lifetime of this technologies plant [a]\nfinancial_lifetime: financial time to break even [a]\ndiscount_rate: discount rate for technology [a]\nstructure: node or line depending on the structure of the technology\nunit: the unit that the capacity of the technology scales with. It can be power[MW] or energy[MWh]\ninput: the input can be a carrier like e.g. electricity carrier: electricity, atimeserieslike e.g.timeseries: demand_electricity, or afuellike e.g.fuel: gas`","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"The information can conatin:","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"constraints: like an efficiency like e.g. efficiency: 0.53 or cap_eq (e.g. discharge capacity is same as charge capacity) cap_eq: bat_in","category":"page"},{"location":"csv_structure/#lines.csv-1","page":"Provided Data & Personal Data Setup","title":"lines.csv","text":"","category":"section"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"note: Note\nThe different lines within the column line define the line-set","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"note: Note\nEach node_start and node_end has to be a node in the file nodes.csv.","category":"page"},{"location":"csv_structure/#","page":"Provided Data & Personal Data Setup","title":"Provided Data & Personal Data Setup","text":"line node_start node_end reactance resistance power_ex power_lim voltage circuits length\n[line...] node - line starts node - line ends reactance resistance exisitng capacity in MW capacity limit in MW voltage or description number of circuits included length in km\n... ... ... ... ... ... ... ... ... ...","category":"page"},{"location":"README_GER_18/#GER-18-1","page":"GER-18","title":"GER-18","text":"","category":"section"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"Germany 18 (dena) nodes, with existing infrastructure of year 2015, no nuclear (Image: Plot)","category":"page"},{"location":"README_GER_18/#Time-Series-1","page":"GER-18","title":"Time Series","text":"","category":"section"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"solar: RenewableNinja nuts2 aggregated to dena-zones weighted by geographic area https://www.renewables.ninja\nwind: RenewableNinja nuts2 aggregated to dena-zones weighted by geographic area https://www.renewables.ninja\nel_demand: Share of \"low\" and \"high\"Open Source Electricity Model for Germany (ELMOD-DE) Data Documentation, Egerer, 2016, \"Open Power System Data. 2018. Data Package Time series. Version 2018-06-30. https://doi.org/10.25832/time_series/2018-06-30. (Primary data from various sources, for a complete list see URL).\"","category":"page"},{"location":"README_GER_18/#Installed-CAP-1","page":"GER-18","title":"Installed CAP","text":"","category":"section"},{"location":"README_GER_18/#nodes-1","page":"GER-18","title":"nodes","text":"","category":"section"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"wind, pv, coal, gas, oil: Open Source Electricity Model for Germany (ELMOD-DE) Data Documentation, Egerer, 2016","category":"page"},{"location":"README_GER_18/#lines-1","page":"GER-18","title":"lines","text":"","category":"section"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"trans: Open Source Electricity Model for Germany (ELMOD-DE) Data Documentation, Egerer, 2016","category":"page"},{"location":"README_GER_18/#Cost-Data-1","page":"GER-18","title":"Cost Data","text":"","category":"section"},{"location":"README_GER_18/#cap-costs-1","page":"GER-18","title":"cap-costs","text":"","category":"section"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"wind, pv, coal, gas, oil: \"SektorÃ¼bergreifende Modellierung und Optimierung eines zukÃ¼nftigen deutschen Energiesystems unter BerÃ¼cksichtigung von EnergieeffizienzmaÃŸnahmen im GebÃ¤udesektor\", Palzer, 2016\ntrans: !Costs for transmission expansion are per MW*km!: \"Zielkonflikte der Energiewende - Life Cycle Assessment der Dekarbonisierung Deutschlands durch sektorenÃ¼bergreifende Infrastrukturoptimierung\", Reinert, 2018\nbat: \"Konventionelle Kraftwerke - Technologiesteckbrief zur Analyse 'FlexibilitÃ¤tskonzepte fÃ¼r die Stromversorgung 2050'\", GÃ¶rner & Sauer, 2016\nh2: \"Shared Capacity and Levelized Cost with Application to Power-to-Gas Technology\", Glenk, 2019","category":"page"},{"location":"README_GER_18/#fix-costs-1","page":"GER-18","title":"fix-costs","text":"","category":"section"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"wind, pv, gas, bat, h2: Percentages M/O per cap_cost: \"SektorÃ¼bergreifende Modellierung und Optimierung eines zukÃ¼nftigen deutschen Energiesystems unter BerÃ¼cksichtigung von EnergieeffizienzmaÃŸnahmen im GebÃ¤udesektor\", Palzer, 2016\noil, coal: assumption oil and coal similar to GuD fix/cap: Percentages M/O per cap_cost: \"SektorÃ¼bergreifende Modellierung und Optimierung eines zukÃ¼nftigen deutschen Energiesystems unter BerÃ¼cksichtigung von EnergieeffizienzmaÃŸnahmen im GebÃ¤udesektor\", Palzer, 2016\ntrans: assumption no fix costs\nh2: \"Shared Capacity and Levelized Cost with Application to Power-to-Gas Technology\", Glenk, 2019","category":"page"},{"location":"README_GER_18/#var-costs-1","page":"GER-18","title":"var-costs","text":"","category":"section"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"coal, gas, oil: Calculation: varcosts_th(Masterthesis Christiane Reinert)/eff(median(eff in ELMOD-DE))\npv, wind, trans: assumption no var costs\nh2: Glenk, \"Shared Capacity and Levelized Cost with Application to Power-to-Gas Technology\", Glenk, 2019\nbat: assumption of minimal var costs to avoid charge and discharge in same hour in case of energy excess","category":"page"},{"location":"README_GER_18/#LCIA-Recipe-H-Midpoint,-GWP-100a-1","page":"GER-18","title":"LCIA Recipe H Midpoint, GWP 100a","text":"","category":"section"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"cap - construction","category":"page"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"pv: Jungbluth Niels, ESU-services, photovoltaic plant construction, 570kWp, multi-Si, on open ground, GLO, cut-off by classification, ecoinvent database version 3.3\nwind: Christian Bauer, Paul Scherrer Institute, wind power plant, 800kW, fixed parts [unit], GLO, cut-off by classification, ecoinvent database version 3.3, Christian Bauer, Paul Scherrer Institute, wind power plant, 800kW, moving parts [unit], GLO, cut-off by classification, ecoinvent database version 3.3\ntrans: R. Jorge, T. Hawkins, und E. Hertwich. Life cycle assessment of electricity transmission and distributionâ€”part 1: Power lines and cables. The International Journal of Life Cycle Assessment, 17(1):9â€“15, 2012. DOI: 10.1007/s11367-011-0335-1.\ncoal: Christian Bauer, Paul Scherrer Institute, hard coal power plant construction, 500MW, GLO, cut-off by classification, ecoinvent database version 3.3; Karin Treyer, Paul Scherrer Institute, electricity production, lignite, DE, cut-off by classification, ecoinvent database version 3.3\ngas: Thomas Heck, Paul Scherrer Institute, gas power plant construction, 300MW electrical, GLO, cut-off by classification, ecoinvent database version 3.3\noil: Niels Jungbluth, ESU-services, oil power plant construction, 500MW, RER (Europe), cut-off by classification, ecoinvent database version 3.3\nbat_e: Dominic Notter, EidgenÃ¶ssische MaterialprÃ¼f- und -forschungsanstalt, battery cell production, Li-ion, CN (China), cut-off by classification, ecoinvent database version 3.4 ;5.4933 kg CO2-Eq per 0.106 kWh\nh2_in: Alex Primas, ETH ZÃ¼rich, fuel cell production, polymer electrolyte membrane, 2kW electrical, future, CH, cut-off by classification, ecoinvent database version 3.3","category":"page"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"var - Electric power generation, transmission and distribution","category":"page"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"coal: Karin Treyer, Paul Scherrer Institute, electricity production, lignite, DE, cut-off by classification, ecoinvent database version 3.3\ngas: Karin Treyer, Paul Scherrer Institute, electricity production, natural gas, conventional power plant, DE, cut-off by classification, ecoinvent database version 3.3\noil: Karin Treyer, Paul Scherrer Institute, electricity production, oil, DE, cut-off by classification, ecoinvent database version 3.3","category":"page"},{"location":"README_GER_18/#Other-1","page":"GER-18","title":"Other","text":"","category":"section"},{"location":"README_GER_18/#","page":"GER-18","title":"GER-18","text":"trans: efficiency is 0.9995 per km\nstorage: efficiencies are in efficiency per month\nstorage hydrogen: referenced in MWh with lower calorific value 33.32 kWh/kg \"DIN 51850: Brennwerte und Heizwerte gasfÃ¶rmiger Brennstoffe\" 1980\nh2_in, h2_out: Sunfire process\nh2_e: Cavern","category":"page"},{"location":"README_GER_1/#GER-1-1","page":"GER-1","title":"GER-1","text":"","category":"section"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"Germany one node,  with existing infrastructure of year 2015, no nuclear (Image: Plot)","category":"page"},{"location":"README_GER_1/#Time-Series-1","page":"GER-1","title":"Time Series","text":"","category":"section"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"solar: \"RenewableNinja\",  \"Open Power System Data. 2018. Data Package Time series. Version 2018-06-30. https://doi.org/10.25832/time_series/2018-06-30. (Primary data from various sources, for a complete list see URL).\"\nwind: \"RenewableNinja\":  \"Open Power System Data. 2018. Data Package Time series. Version 2018-06-30. https://doi.org/10.25832/time_series/2018-06-30. (Primary data from various sources, for a complete list see URL).\"\nel_demand: Open Source Electricity Model for Germany (ELMOD-DE) Data Documentation, Egerer, 2016, \"Open Power System Data. 2018. Data Package Time series. Version 2018-06-30. https://doi.org/10.25832/time_series/2018-06-30. (Primary data from various sources, for a complete list see URL).\"","category":"page"},{"location":"README_GER_1/#Installed-CAP-1","page":"GER-1","title":"Installed CAP","text":"","category":"section"},{"location":"README_GER_1/#nodes-1","page":"GER-1","title":"nodes","text":"","category":"section"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"wind, pv, coal, gas, oil: Open Source Electricity Model for Germany (ELMOD-DE) Data Documentation, Egerer, 2016","category":"page"},{"location":"README_GER_1/#Cost-Data-1","page":"GER-1","title":"Cost Data","text":"","category":"section"},{"location":"README_GER_1/#General-1","page":"GER-1","title":"General","text":"","category":"section"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"economic lifetime T: Glenk, \"Shared Capacity and Levelized Cost with Application to Power-to-Gas Technology\", Glenk, 2019\ncost of capital (WACC), r:  Glenk, \"Shared Capacity and Levelized Cost with Application to Power-to-Gas Technology\", Glenk, 2019","category":"page"},{"location":"README_GER_1/#cap-costs-1","page":"GER-1","title":"cap-costs","text":"","category":"section"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"wind, pv, coal, gas, oil: \"SektorÃ¼bergreifende Modellierung und Optimierung eines zukÃ¼nftigen deutschen Energiesystems unter BerÃ¼cksichtigung von EnergieeffizienzmaÃŸnahmen im GebÃ¤udesektor\", Palzer, 2016\ntrans: !Costs for transmission expansion are per MW*km!: \"Zielkonflikte der Energiewende - Life Cycle Assessment der Dekarbonisierung Deutschlands durch sektorenÃ¼bergreifende Infrastrukturoptimierung\", Reinert, 2018\nbat: \"Konventionelle Kraftwerke - Technologiesteckbrief zur Analyse 'FlexibilitÃ¤tskonzepte fÃ¼r die Stromversorgung 2050'\", GÃ¶rner & Sauer, 2016\nh2: \"Shared Capacity and Levelized Cost with Application to Power-to-Gas Technology\", Glenk, 2019","category":"page"},{"location":"README_GER_1/#fix-costs-1","page":"GER-1","title":"fix-costs","text":"","category":"section"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"wind, pv, gas, bat, h2: Percentages M/O per cap_cost: \"SektorÃ¼bergreifende Modellierung und Optimierung eines zukÃ¼nftigen deutschen Energiesystems unter BerÃ¼cksichtigung von EnergieeffizienzmaÃŸnahmen im GebÃ¤udesektor\", Palzer, 2016\noil, coal: assumption oil and coal similar to GuD fix/cap: Percentages M/O per cap_cost: \"SektorÃ¼bergreifende Modellierung und Optimierung eines zukÃ¼nftigen deutschen Energiesystems unter BerÃ¼cksichtigung von EnergieeffizienzmaÃŸnahmen im GebÃ¤udesektor\", Palzer, 2016\ntrans: assumption no fix costs","category":"page"},{"location":"README_GER_1/#var-costs-1","page":"GER-1","title":"var-costs","text":"","category":"section"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"coal, gas, oil: Calculation: varcosts_th(Masterthesis Christiane Reinert)/eff(median(eff in ELMOD-DE))\npv, wind, trans: assumption no var costs\nh2: Glenk, \"Shared Capacity and Levelized Cost with Application to Power-to-Gas Technology\", Glenk, 2019\nbat: assumption of minimal var costs to avoid charge and discharge in same hour in case of energy excess","category":"page"},{"location":"README_GER_1/#LCIA-Recipe-H-Midpoint,-GWP-100a-1","page":"GER-1","title":"LCIA Recipe H Midpoint, GWP 100a","text":"","category":"section"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"cap - construction","category":"page"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"pv: Jungbluth Niels, ESU-services, photovoltaic plant construction, 570kWp, multi-Si, on open ground, GLO, cut-off by classification, ecoinvent database version 3.3\nwind: Christian Bauer, Paul Scherrer Institute, wind power plant, 800kW, fixed parts [unit], GLO, cut-off by classification, ecoinvent database version 3.3, Christian Bauer, Paul Scherrer Institute, wind power plant, 800kW, moving parts [unit], GLO, cut-off by classification, ecoinvent database version 3.3\ntrans: R. Jorge, T. Hawkins, und E. Hertwich. Life cycle assessment of electricity transmission and distributionâ€”part 1: Power lines and cables. The International Journal of Life Cycle Assessment, 17(1):9â€“15, 2012. DOI: 10.1007/s11367-011-0335-1.\ncoal: Christian Bauer, Paul Scherrer Institute, hard coal power plant construction, 500MW, GLO, cut-off by classification, ecoinvent database version 3.3; Karin Treyer, Paul Scherrer Institute, electricity production, lignite, DE, cut-off by classification, ecoinvent database version 3.3\ngas: Thomas Heck, Paul Scherrer Institute, gas power plant construction, 300MW electrical, GLO, cut-off by classification, ecoinvent database version 3.3\noil: Niels Jungbluth, ESU-services, oil power plant construction, 500MW, RER (Europe), cut-off by classification, ecoinvent database version 3.3\nbat_e: Dominic Notter, EidgenÃ¶ssische MaterialprÃ¼f- und -forschungsanstalt, battery cell production, Li-ion, CN (China), cut-off by classification, ecoinvent database version 3.4 ;5.4933 kg CO2-Eq per 0.106 kWh\nh2_in: Alex Primas, ETH ZÃ¼rich, fuel cell production, polymer electrolyte membrane, 2kW electrical, future, CH, cut-off by classification, ecoinvent database version 3.3","category":"page"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"var - Electric power generation, transmission and distribution","category":"page"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"coal: Karin Treyer, Paul Scherrer Institute, electricity production, lignite, DE, cut-off by classification, ecoinvent database version 3.3\ngas: Karin Treyer, Paul Scherrer Institute, electricity production, natural gas, conventional power plant, DE, cut-off by classification, ecoinvent database version 3.3\noil: Karin Treyer, Paul Scherrer Institute, electricity production, oil, DE, cut-off by classification, ecoinvent database version 3.3","category":"page"},{"location":"README_GER_1/#Other-1","page":"GER-1","title":"Other","text":"","category":"section"},{"location":"README_GER_1/#","page":"GER-1","title":"GER-1","text":"storage: efficiencies are in efficiency per month\nstorage hydrogen: referenced in MWh with lower calorific value 33.32 kWh/kg \"DIN 51850: Brennwerte und Heizwerte gasfÃ¶rmiger Brennstoffe\" 1980\nh2_in, h2_out: Sunfire process\nh2_e: Cavern","category":"page"},{"location":"README_CA_1/#CA-1-1","page":"CA-1","title":"CA-1","text":"","category":"section"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"California (modeling CAISO) one node (Image: Plot)","category":"page"},{"location":"README_CA_1/#Time-Series-1","page":"CA-1","title":"Time Series","text":"","category":"section"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"el_demand: http://www.caiso.com/planning/Pages/ReliabilityRequirements/Default.aspx#Historical\nsolar: weighted by area of each of the CA14 nodes: \"RenewableNinja\",  \"Open Power System Data. 2018. Data Package Time series. Version 2018-06-30. https://doi.org/10.25832/timeseries/2018-06-30. (Primary data from various sources, for a complete list see URL).\" (dataset=\"merra2\",system_loss = 10,tracking = 1,tilt = 35,azim = 180)\nwind: weighted by installed capacity on each of the CA14 nodes: \"RenewableNinja\":  \"Open Power System Data. 2018. Data Package Time series. Version 2018-06-30. https://doi.org/10.25832/timeseries/2018-06-30. (Primary data from various sources, for a complete list see URL).\"; average hub height in 2016: 80m https://www.eia.gov/todayinenergy/detail.php?id=33912#tab1","category":"page"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"(capacity = 1.0,height = 80,turbine = \"Vestas+V80+2000\",dataset=\"merra2\",systemloss = 10), locations based on current wind-farms, if available in region (https://www.energy.ca.gov/maps/renewable/wind/WindResourceAreaCA_Statewide.pdf)","category":"page"},{"location":"README_CA_1/#Cost-Data-1","page":"CA-1","title":"Cost Data","text":"","category":"section"},{"location":"README_CA_1/#General-1","page":"CA-1","title":"General","text":"","category":"section"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"economic lifetime T: NREL\ncost of capital (WACC), r: NREL","category":"page"},{"location":"README_CA_1/#cap-costs-1","page":"CA-1","title":"cap-costs","text":"","category":"section"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"wind, pv, coal, gas, oil, bat: NREL\ntrans: !Costs for transmission expansion are per MW*km!: \"Zielkonflikte der Energiewende - Life Cycle Assessment der Dekarbonisierung Deutschlands durch sektorenÃ¼bergreifende Infrastrukturoptimierung\", Reinert, 2018\nh2: \"Shared Capacity and Levelized Cost with Application to Power-to-Gas Technology\", Glenk, 2019","category":"page"},{"location":"README_CA_1/#fix-costs-1","page":"CA-1","title":"fix-costs","text":"","category":"section"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"wind, pv, gas, bat, h2, oil, coal: NREL\ntrans: assumption no fix costs","category":"page"},{"location":"README_CA_1/#var-costs-1","page":"CA-1","title":"var-costs","text":"","category":"section"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"pv, wind, coal, gas, oil: NREL\ntrans: assumption no var costs\nbat, h2: assumption of minimal var costs to avoid charge and discharge in same hour in case of energy excess","category":"page"},{"location":"README_CA_1/#LCIA-Recipe-H-Midpoint,-GWP-100a-1","page":"CA-1","title":"LCIA Recipe H Midpoint, GWP 100a","text":"","category":"section"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"cap - construction","category":"page"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"pv: Jungbluth Niels, ESU-services, photovoltaic plant construction, 570kWp, multi-Si, on open ground, GLO, cut-off by classification, ecoinvent database version 3.3\nwind: Christian Bauer, Paul Scherrer Institute, wind power plant, 800kW, fixed parts [unit], GLO, cut-off by classification, ecoinvent database version 3.3, Christian Bauer, Paul Scherrer Institute, wind power plant, 800kW, moving parts [unit], GLO, cut-off by classification, ecoinvent database version 3.3\ntrans: R. Jorge, T. Hawkins, und E. Hertwich. Life cycle assessment of electricity transmission and distributionâ€”part 1: Power lines and cables. The International Journal of Life Cycle Assessment, 17(1):9â€“15, 2012. DOI: 10.1007/s11367-011-0335-1.\ncoal: Christian Bauer, Paul Scherrer Institute, hard coal power plant construction, 500MW, GLO, cut-off by classification, ecoinvent database version 3.3; Karin Treyer, Paul Scherrer Institute, electricity production, lignite, DE, cut-off by classification, ecoinvent database version 3.3\ngas: Thomas Heck, Paul Scherrer Institute, gas power plant construction, 300MW electrical, GLO, cut-off by classification, ecoinvent database version 3.3\noil: Niels Jungbluth, ESU-services, oil power plant construction, 500MW, RER (Europe), cut-off by classification, ecoinvent database version 3.3\nbat_e: Dominic Notter, EidgenÃ¶ssische MaterialprÃ¼f- und -forschungsanstalt, battery cell production, Li-ion, CN (China), cut-off by classification, ecoinvent database version 3.4 ;5.4933 kg CO2-Eq per 0.106 kWh\nh2_in: Alex Primas, ETH ZÃ¼rich, fuel cell production, polymer electrolyte membrane, 2kW electrical, future, CH, cut-off by classification, ecoinvent database version 3.3","category":"page"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"var - Electric power generation, transmission and distribution","category":"page"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"coal: Karin Treyer, Paul Scherrer Institute, electricity production, lignite, DE, cut-off by classification, ecoinvent database version 3.3\ngas: Karin Treyer, Paul Scherrer Institute, electricity production, natural gas, conventional power plant, DE, cut-off by classification, ecoinvent database version 3.3\noil: Karin Treyer, Paul Scherrer Institute, electricity production, oil, DE, cut-off by classification, ecoinvent database version 3.3","category":"page"},{"location":"README_CA_1/#Other-1","page":"CA-1","title":"Other","text":"","category":"section"},{"location":"README_CA_1/#","page":"CA-1","title":"CA-1","text":"trans: efficiency is 0.9995 per km\nstorage: efficiencies are in efficiency per month\nstorage hydrogen: referenced in MWh with lower calorific value 33.32 kWh/kg \"DIN 51850: Brennwerte und Heizwerte gasfÃ¶rmiger Brennstoffe\" 1980\nh2_in, h2_out: Sunfire process\nh2_e: Cavern","category":"page"},{"location":"preparing_opt_cep_data/#Preparing-OptDataCEP-1","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"","category":"section"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"Here, we first describe how to load provided non time-series dependent data or your non time-series dependent data as OptDataCEP. We second describe the datatypes within the OptDataCEP and how to access it.","category":"page"},{"location":"preparing_opt_cep_data/#Loading-Provided-Data-1","page":"Preparing OptDataCEP","title":"Loading Provided Data","text":"","category":"section"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"load_cep_data_provided loads the non time-series dependent data for the CEP and can take the following regions:","category":"page"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"GER: Germany\nCA: California\nTX: Texas","category":"page"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"load_cep_data_provided","category":"page"},{"location":"preparing_opt_cep_data/#CapacityExpansion.load_cep_data_provided","page":"Preparing OptDataCEP","title":"CapacityExpansion.load_cep_data_provided","text":"load_cep_data_provided(region::String)\n\nLoading from .csv files in a the folder ../CEP/data/{region}/ Follow instructions preparing your own data:\n\nregion::String: name of state or region data belongs to\ncosts::OptVariable: costs[tech,node,year,account,impact] - annulized costs [USD in USD/MW_el, CO2 in kg-COâ‚‚-eq./MW_el]\ntechs::OptVariable: techs[tech] - OptDataCEPTech\nnodes::OptVariable: nodes[tech,node] - OptDataCEPNode\nlines::OptVarible: lines[tech,line] - OptDataCEPLine\n\nfor regions:\n\n\"GER_1\": Germany 1 node\n\"GER_18\": Germany 18 nodes\n\"CA_1\": California 1 node\n\"CA_14\": California 14 nodes\n\"TX_1\": Texas 1 node\n\n\n\n\n\n","category":"function"},{"location":"preparing_opt_cep_data/#Loading-Your-Own-Data-1","page":"Preparing OptDataCEP","title":"Loading Your Own Data","text":"","category":"section"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"Use load_cep_data with data_path pointing to the folder with your cost, node, (line), and technology data.","category":"page"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"load_cep_data","category":"page"},{"location":"preparing_opt_cep_data/#CapacityExpansion.load_cep_data","page":"Preparing OptDataCEP","title":"CapacityExpansion.load_cep_data","text":"load_cep_data(data_path::String)\n\nLoading from .csv files in a the folder /data_path/ Follow instructions for the CSV-Files: -region::String: name of state or region data belongs to -costs::OptVariable: costs[tech,node,year,account,impact] - annulized costs [USD in USD/MWel, CO2 in kg-COâ‚‚-eq./MWel]-techs::OptVariable: techs[tech] - OptDataCEPTech - -nodes::OptVariable: nodes[tech,node] - OptDataCEPNode -lines::OptVarible`: lines[tech,line] - OptDataCEPLine\n\n\n\n\n\n","category":"function"},{"location":"preparing_opt_cep_data/#Data-Types-1","page":"Preparing OptDataCEP","title":"Data Types","text":"","category":"section"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"OptVariable\nOptDataCEP\nOptDataCEPTech\nOptDataCEPNode\nOptDataCEPLine","category":"page"},{"location":"preparing_opt_cep_data/#CapacityExpansion.OptVariable","page":"Preparing OptDataCEP","title":"CapacityExpansion.OptVariable","text":"OptVariable{T,N,Ax,L<:NTuple{N,Dict}} <: AbstractArray{T,N}{\ndata::Array{T,N},\naxes::Ax,\nlookup::L,\naxes_names::Array{String,1}}\ntype::String\n\nOptVariable is a structure that allows to have a multi-dimensional data-Array that can be indexed using keys. An examplary lookup can be done the following way: optvar['key1','key2']=value. The value can be of any type like e.g. Float64. The OptVariable is used both for data input and output.\n\ndata::Array - includes the optimization variable output in  form of an array\naxes_names::Array{String,1}` - includes the names of the different axes and is equivalent to the sets in the optimization formulation\naxes::Tuple - includes the values of the different axes of the optimization variables\ntype::String - defines the type of the variable being cv - cost variable - dv -design variable - ov - operating variable - sv - slack variable\n\n\n\n\n\n","category":"type"},{"location":"preparing_opt_cep_data/#CapacityExpansion.OptDataCEP","page":"Preparing OptDataCEP","title":"CapacityExpansion.OptDataCEP","text":" OptDataCEP{region::String,\n            costs::OptVariable,\n            techs::OptVariable,\n            nodes::OptVariable,\n            lines::OptVariabl} <: OptData\n\nAll not timeseries depending data for the CapacityExpansionProblem is stored in an OptDataCEP struct. OptVariable structs are used to index an element of e.g. .costs['pv','germany',2016,'var','EUR']=value. Depending on the field the value has another type like Number, OptDataCEPLine,...\n\nregion::String:          name of state or region data belongs to\ncosts::OptVariable:    costs[tech,node,year,account,impact] - Number\ntechs::OptVariable:    techs[tech] - OptDataCEPTech\nnodes::OptVariable:    nodes[tech, node] - OptDataCEPNode\nlines::OptVariable:     lines[tech, line] - OptDataCEPLine\n\n\n\n\n\n","category":"type"},{"location":"preparing_opt_cep_data/#CapacityExpansion.OptDataCEPTech","page":"Preparing OptDataCEP","title":"CapacityExpansion.OptDataCEPTech","text":" OptDataCEPTech{name::String\n               tech_group::Array{String,1}\n               unit::String\n               structure::String\n               plant_lifetime::Number\n               financial_lifetime::Number\n               discount_rate::Number\n               annuityfactor::Number\n               input::Dict\n               output::Dict\n               constraints::Dict} <: OptData\n\nThe information of the single tech is stored in an OptDataCEPTech struct:\n\nname: A detailed name of the technology\nunit: the unit that the capacity of the technology scales with. It can be power[MW] or energy[MWh]\ntech_group: technology-groups that the technology belongs to. Groups can be: all, demand, generation, dispatchable_generation, non_dispatchable_generation, storage, conversion, transmission\nplant_lifetime: the lifetime of this technologies plant [a]\nfinancial_lifetime: financial time to break even [a]\nannuityfactor: the annuityfactor is calculated based on the discountrate and the plantlifetime\ndiscount_rate: discount rate for technology [a]\nstructure: node or line depending on the structure of the technology\ninput: the input can be a carrier like e.g. electricity \"carrier\" => \"electricity\", atimeserieslike e.g.\"timeseries\"=> \"demand_electricity\", or afuellike e.g.\"fuel\" => \"gas\"`\noutput: the output can be a carrier as well\nconstraints: a dictionary with information like an efficiency like e.g. \"efficiency\"=> 0.53 or cap_eq (e.g. discharge capacity is same as charge capacity) \"cap_eq\" => \"bat_in\"\n\nreturns techs::OptVariable    techs[tech] - OptDataCEPTech\n\n\n\n\n\n","category":"type"},{"location":"preparing_opt_cep_data/#CapacityExpansion.OptDataCEPNode","page":"Preparing OptDataCEP","title":"CapacityExpansion.OptDataCEPNode","text":" OptDataCEPNode{name::String,\n               power_ex::Number\n               power_lim::Number\n               region::String\n               latlon::LatLon} <: OptData\n\nThe information about the nodes in stored in an OptDataCEPNode struct:\n\nname\npower_ex existing capacity [MW or MWh (tech_e)]\npower_lim capacity limit [MW or MWh (tech_e)]\nregion name of the region\nlatlon hold geolocation information [Â°,Â°]\n\n\n\n\n\n","category":"type"},{"location":"preparing_opt_cep_data/#CapacityExpansion.OptDataCEPLine","page":"Preparing OptDataCEP","title":"CapacityExpansion.OptDataCEPLine","text":" OptDataCEPLine{name::String\n               node_start::String\n               node_end::String\n               reactance::Number\n               resistance::Number\n               power_ex::Number\n               power_lim::Number\n               circuits::Int\n               voltage::Number\n               length::Number\n               eff::Number} <: OptData\n\nThe information of the single lines is stored in an OptDataCEPLine struct:\n\nname: Name of the line\nnode_start Node where line starts\nnode_end Node where line ends\nreactance\nresistance [Î©]\npower_ex: existing power limit [MW]\npower_lim: limit power limit [MW]\ncircuits [-]\nvoltage [V]\nlength [km]\neff [-]\n\n\n\n\n\n","category":"type"},{"location":"preparing_opt_cep_data/#Examples-1","page":"Preparing OptDataCEP","title":"Examples","text":"","category":"section"},{"location":"preparing_opt_cep_data/#Example-loading-CEP-Data-1","page":"Preparing OptDataCEP","title":"Example loading CEP Data","text":"","category":"section"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"using CapacityExpansion\nstate=\"GER_1\"\n# load ts-input-data\ncep_data = load_cep_data_provided(state)\ncep_data.costs","category":"page"},{"location":"preparing_opt_cep_data/#Example-indexing-OptVariables-1","page":"Preparing OptDataCEP","title":"Example indexing OptVariables","text":"","category":"section"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"Indexing is provided similar to Arrays:","category":"page"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"cep_data.costs[\"pv\",\"germany\",2015,\"cap_fix\",\"EUR\"]","category":"page"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"The axes are named and the axes can be called using the basic axes function and providing the sets name:","category":"page"},{"location":"preparing_opt_cep_data/#","page":"Preparing OptDataCEP","title":"Preparing OptDataCEP","text":"axes(cep_data.costs,\"tech\")","category":"page"},{"location":"opt_cep/#Optimization-Problem-Formulation-1","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"Here, we describe how to load provided non time-series dependent data or your non time-series dependent data as OptDataCEP. We second describe the datatypes within the OptDataCEP and how to access it.","category":"page"},{"location":"opt_cep/#General-1","page":"Optimization Problem Formulation","title":"General","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"The capacity expansion problem (CEP) is designed as a linear optimization model. It is implemented in the algebraic modeling language JUMP. The implementation within JuMP allows to optimize multiple models in parallel and handle the steps from data input to result analysis and diagram export in one open source programming language. The coding of the model enables scalability based on the provided data input, single command based configuration of the setup model, result and configuration collection for further analysis and the opportunity to run design and operation in different optimizations.","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"(Image: Plot)","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"The basic idea for the energy system is to have a spacial resolution of the energy system in discrete nodes. Each node has demand, non-dispatchable generation, dispatachable generation and storage capacities of varying technologies connected to itself. The different energy system nodes are interconnected with each other by transmission lines. The model is designed to minimize social costs by minimizing the following objective function:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"min sum_accounttechCOST_accountEURUSDtech + sum LL cdot  cost_LL + LE cdot  cos_LE","category":"page"},{"location":"opt_cep/#Sets-1","page":"Optimization Problem Formulation","title":"Sets","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"The models scalability is relying on the usage of sets. The elements of the sets are extracted from the input data and scale the different variables. An overview of the sets is provided in the table. Depending on the models configuration the necessary sets are initialized.","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"The sets are setup as a dictionary and organized as set[tech_name][tech_group]=[elements...], where:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"tech_name is the name of the dimension like e.g. tech, or node\ntech_group is the name of a group of elements within each dimension like e.g. [\"all\", \"generation\"]. The group 'all' always contains all elements of the dimension\n[elements...] is the Array with the different elements like [\"pv\", \"wind\", \"gas\"]","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"name description\nlines transmission lines connecting the nodes\nnodes spacial energy system nodes\ntech generation, conversion, storage, and transmission technologies\ncarrier carrier that an energy balance is calculated for electricity, hydrogen...\nimpact impact categories like EUR or USD, CO 2 âˆ’ eq., ...\naccount fixed costs for installation and yearly expenses, variable costs\ninfrastruct infrastructure status being either new or existing\ntime K numeration of the representative periods\ntime T period numeration of the time intervals within a period\ntime T point numeration of the time points within a period\ntime I period numeration of the time invervals of the full input data periods\ntime I point numeration of the time points of the full input data periods\ndir transmission direction of the flow uniform with or opposite to the lines direction","category":"page"},{"location":"opt_cep/#Variables-1","page":"Optimization Problem Formulation","title":"Variables","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"The variables can have different types:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"cv: cost variable - information of the costs\ndv: design variable - information of the energy system design\nov: operation variable - information of the energy system operation\nsv: slack variable - information of unmet demands or exceeded emission limits","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"An overview of the variables used in the CEP is provided in the table:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"name type dimensions unit description\nCOST cv [account,impact,tech] EUR or USD, LCA-categories Costs\nCAP dv [tech,infrastruct,node] MW Capacity\nGEN ov [tech,carrier,t,k,node] MW Generation\nSLACK sv [carrier,t,k,node] MW Power gap, not provided by installed CAP\nLL sv [carrier] MWh LoastLoad Generation gap, not provided by installed CAP\nLE sv [impact] LCA-categories LoastEmission Amount of emissions that installed CAP crosses the Emission constraint\nINTRASTOR ov [tech,carrier,t,k,node] MWh Storage level within a period\nINTERSTOR ov [tech,carrier,i,node] MWh Storage level between periods of the full time series\nFLOW ov [tech,carrier,dir,t,k,line] MW Flow over transmission line\nTRANS ov [tech,infrastruct,lines] MW maximum capacity of transmission lines","category":"page"},{"location":"opt_cep/#Running-the-Capacity-Expansion-Problem-1","page":"Optimization Problem Formulation","title":"Running the Capacity Expansion Problem","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"note: Note\nThe CEP model can be run with many configurations. The configurations themselves don't mess with each other though the provided input data must fulfill the ability to have e.g. lines in order for transmission to work.","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"An overview is provided in the following table:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"description unit configuration values type default value\nenforce an emission-limit kg-impact/MWh-carrier limit_emission Dict{String,Number}(impact/carrier=>value) ::Dict{String,Number} Dict{String,Number}()\nincluding existing infrastructure (no extra costs) and limit infrastructure - infrastructure Dict{String,Array}(\"existing\"=>[tech-groups...], \"limit\"=>[tech-groups...]) ::Dict{String,Array} Dict{String,Array}(\"existing\"=>[\"demand\"])\ntype of storage implementation - storage_type \"none\", \"simple\" or \"seasonal\" ::String \"none\"\nallowing conversion between energy carriers - conversion true or false ::Bool false\nallowing demand - demand true or false ::Bool true\nallowing dispatchable generation - dispatchable_generation true or false ::Bool true\nallowing non dispatchable generation - non_dispatchable_generation true or false ::Bool true\nallowing transmission - transmission true or false ::Bool false\nfix. installed capacities to dispatch problem - fixed_design_variables design variables from design run or nothing ::OptVariables nothing\nallowing lost load (necessary for dispatch) price/MWh-carrier lost_load_cost Dict{String,Number}(carrier=>value) ::Dict{String,Number} Dict{String,Number}()\nallowing lost emission (necessary for dispatch) price/kg-impact lost_emission_cost Dict{String,Number}(impact=>value) ::Dict{String,Number} Dict{String,Number}()","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"They can be applied in the following way:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"run_opt","category":"page"},{"location":"opt_cep/#CapacityExpansion.run_opt","page":"Optimization Problem Formulation","title":"CapacityExpansion.run_opt","text":"run_opt(ts_data::ClustData,opt_data::OptDataCEP,config::Dict{String,Any},optimizer::DataType)\n\nOrganizing the actual setup and run of the CEP-Problem. This function shouldn't be called by a user, but from within the other run_opt-functions Required elements are:\n\nts_data: The time-series data.\nopt_data: In this case the OptDataCEP that contains information on costs, nodes, techs and for transmission also on lines.\nconfig: This includes all the settings for the design optimization problem formulation.\noptimizer: The used optimizer, which could e.g. be Clp: using Clp optimizer=Clp.Optimizer or Gurobi: using Gurobi optimizer=Gurobi.Optimizer.\n\n\n\n\n\n run_opt(ts_data::ClustData,opt_data::OptDataCEP,config::Dict{String,Any},fixed_design_variables::Dict{String,Any},optimizer::DataTyple;lost_el_load_cost::Number=Inf,lost_CO2_emission_cost::Number)\n\nThis problem runs the operational optimization problem only, with fixed design variables. provide the fixed design variables and the config of the previous step (design run or another opterational run) Required elements are:\n\nts_data: The time-series data, which should be be the original time-series data for this operational run. The keys(ts_data.data) need to match the [time_series_name]-[node]\nopt_data: In this case the OptDataCEP that contains information on costs, nodes, techs and for transmission also on lines. - Should be the same as in the design run.\nconfig: This includes all the previous settings for the design optimization problem formulation and ensures that the configuration is the same.\nfixed_design_variables: All the design variables that are determined by the previous design run.\noptimizer: The used optimizer, which could e.g. be Clp: using Clp optimizer=Clp.Optimizer or Gurobi: using Gurobi optimizer=Gurobi.Optimizer.\n\nWhat you can change in the config:\n\nlost_load_cost: Dictionary with numbers indicating the lost load price per carrier (e.g. electricity in price/MWh should be greater than 1e6), give Inf for no SLACK and LL (Lost Load - a variable for unmet demand by the installed capacities)\nlost_emission_cost: Dictionary with numbers indicating the emission price/kg-emission (Suggestion: around 700), give Inf for no LE (Lost Emissions - a variable for emissions that will exceed the limit in order to provide the demand with the installed capacities)\n\n\n\n\n\nrun_opt(ts_data::ClustData,\n       opt_data::OptDataCEP,\n       optimizer::DataType;\n       descriptor::String=\"\",\n       storage_type::String=\"none\",\n       demand::Bool=true,\n       dispatchable_generation::Bool=true,\n       non_dispatchable_generation::Bool=true,\n       conversion::Bool=false,\n       transmission::Bool=false,\n       lost_load_cost::Dict{String,Number}=Dict{String,Number}(),\n       lost_emission_cost::Dict{String,Number}=Dict{String,Number}(),\n       limit_emission::Dict{String,Number}=Dict{String,Number}(),\n       infrastructure::Dict{String,Array}=Dict{String,Array}(\"existing\"=>[\"demand\"],\"limit\"=>Array{String,1}()),\n       scale::Dict{Symbol,Int}=Dict{Symbol,Int}(:COST => 1e9, :CAP => 1e3, :GEN => 1e3, :SLACK => 1e3, :INTRASTOR => 1e3, :INTERSTOR => 1e6, :FLOW => 1e3, :TRANS =>1e3, :LL => 1e6, :LE => 1e9),\n       print_flag::Bool=true,\n       optimizer_config::Dict{Symbol,Any}=Dict{Symbol,Any}(),\n       round_sigdigits::Int=9)\n\nWrapper function for type of optimization problem for the CEP-Problem (NOTE: identifier is the type of opt_data - in this case OptDataCEP - so identification as CEP problem). Required elements are:\n\nts_data: The time-series data, which could either be the original input data or some aggregated time-series data. The keys(ts_data.data) need to match the [time_series_name]-[node]\nopt_data: The OptDataCEP that contains information on costs, nodes, techs and for transmission also on lines.\noptimizer: The used optimizer, which could e.g. be Clp: using Clp optimizer=Clp.Optimizer or Gurobi: using Gurobi optimizer=Gurobi.Optimizer.\n\nOptions to tweak the model are:\n\ndescriptor: A name for the model\nstorage_type: String \"none\" for no storage, \"simple\" to include simple (only intra-day storage), or \"seasonal\" to include seasonal storage (inter-day)\ndemand: Bool true or false for technology-group\ndispatchable_generation: Bool true or false for technology-group\nnon_dispatchable_generation: Bool true or false for technology-group\nconversion: Bool true or false for technology-group. Allows for conversion between different energy carriers. By default false, and by default true if storage is enabled. \ntransmission:Bool true or false for technology-group. If no transmission should be modeled, a 'copperplate' is assumed with no transmission restrictions between the nodes\nlimit: Dictionary with numbers limiting the kg.-emission-eq./MWh (e.g. CO2 normally in a range from 5-1250 kg-CO2-eq/MWh), give Inf or no kw if unlimited\nlost_load_cost: Dictionary with numbers indicating the lost load price per carrier (e.g. electricity in price/MWh should be greater than 1e6), give Inf for no SLACK and LL (Lost Load - a variable for unmet demand by the installed capacities). Example: lostloadcost=Dict{String,Number}(\"electricity\"=>1e6)\nlost_emission_cost: Dictionary with numbers indicating the emission price/kg-emission (Suggestion: around 700), give Inf for no LE (Lost Emissions - a variable for emissions that will exceed the limit in order to provide the demand with the installed capacities). Example: lostemissioncost=Dict{String,Number}(\"CO2\"=>700)\ninfrastructure : Dictionary with Arrays indicating which technology groups should have existing infrastructure (\"existing\" => [\"demand\",\"dispatchable_generation\"]) and which technology groups should have infrastructure limited (\"limit\" => [\"non_dispatchable_generation\"])\nscale: Dict{Symbol,Int} with a number for each variable (like :COST) to scale the variables and equations to similar quantities. Try to acchieve that the numerical model only has to solve numerical variables in a scale of 0.01 and 100. The following equation is used as a relationship between the real value, which is provided in the solution (real-VAR), and the numerical variable, which is used within the model formulation (VAR): real-VAR [EUR, MW or MWh] = scale[:VAR] â‹… VAR.\ndescriptor: String with the name of this paricular model like \"kmeans-10-co2-500\"\nprint_flag: Bool to decide if a summary of the Optimization result should be printed.\noptimizer_config: Each Symbol and the corresponding value in the Dictionary is passed on to the with_optimizer function in addition to the optimizer. For Gurobi an example Dictionary could look like Dict{Symbol,Any}(:Method => 2, :OutputFlag => 0, :Threads => 2) more information can be found in the optimizer specific documentation.\nround_sigdigits: Can be used to round the values of the result to a certain number of sigdigits.\n\n\n\n\n\n","category":"function"},{"location":"opt_cep/#Transmission-1","page":"Optimization Problem Formulation","title":"Transmission","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"A CapacityExpansion model can be run with or without the technology transmission.","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"note: Note\nIf the technology transmission is not modeled (transmission=false), the transmission between nodes is not restricted, which is equivalent to a copperplate assumption.","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"note: Note\nInclude transmission=true and infrastructure = Dict{String,Array}(\"existing\"=>[...,\"transmission\"], \"limit\"=>[...,\"transmission\"]) to model existing transmission. This sets the existing transmission TRANS to the values defined in the lines.csv file in column power_ex, and limits the transmission by the values defined in lines.csv in the column power_lim. If no new transmission should be setup, use the same values for existing transmission(column power_ex) and the limit (column power_lim).","category":"page"},{"location":"opt_cep/#Solver-1","page":"Optimization Problem Formulation","title":"Solver","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"The package provides no optimizer and a solver has to be added separately. For the linear optimization problem suggestions are:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"Clp as an open source solver\nGurobi as a proprietary solver with free academic licenses. Gurobi is faster than Clp and we prefer it in the academic setting.\nCPLEX as an alternative proprietary solver","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"Install the corresponding julia-package for the solver and call its optimizer like e.g.:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"using Pkg\nPkg.add(\"Clp\")\nusing Clp\noptimizer=Clp.Optimizer","category":"page"},{"location":"opt_cep/#Solver-Configuration-1","page":"Optimization Problem Formulation","title":"Solver Configuration","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"Depending on the Solver different solver configurations are possible. The information is always provided as Dict{Symbol,Any}. The keys of the dictionary are the parameters and the values of the dictionary are the values passed to the solver.","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"For example the Gurobi solver can be configured to have no OutputFlag and run on two threads (per julia thread) the following way:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"optimizer_config=Dict{Symbol,Any}(:OutputFlag => 0, :Threads => 2)","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"Further information on possible keys for Gurobi can be found at Gurobi parameter description.","category":"page"},{"location":"opt_cep/#Scaling-1","page":"Optimization Problem Formulation","title":"Scaling","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"The package features the scaling of variables and equations. Scaling variables, which are used in the numerical model, to 0.01 â‰¤ x â‰¤ 100 and scaling equations to 3â‹…x = 1 instead of 3000â‹…x = 1000 improves the shape of the optimization space and significantly reduces the computational time used to solve the numerical model.","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"The values are only scaled within the numerical model formulation, where we call the variable VAR, but the values are unscaled in the solution, which we call real-VAR. The following logic is used to scale the variables: real-VAR [EUR, USD, MW, or MWh] = scale[:VAR] â‹… VAR 0.01 â‰¤ VAR  â‰¤ 100 â‡” 0.01 â‰¤ real-VAR / scale[:VAR] â‰¤ 100","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"The equations are scaled with the scaling parameter of the first variable, which is scale[:COST] in the following example: scale[:COST]â‹…COST = 10â‹…scale[:CAP]â‹…CAP â‡”              COST = 10â‹…(scale[:CAP]/scale[:COST])â‹…CAP","category":"page"},{"location":"opt_cep/#Change-scaling-parameters-1","page":"Optimization Problem Formulation","title":"Change scaling parameters","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"Changing the scaling parameters is useful if the data you use represents a much smaller or bigger energy system than the ones representing Germany and California provided in this package Determine the right scaling parameters by checking the real-values of COST, CAP, GEN... (real-VAR) in a solution using your data. Select the scaling parameters to match the following: 0.01 â‰¤ real-VAR / scale[:VAR] â‰¤ 100 Create a dictionary with the new scaling parameters for EACH variable and include it as the optional scale input to overwrite the default scale in run_opt:","category":"page"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"scale=Dict{Symbol,Int}(:COST => 1e9, :CAP => 1e3, :GEN => 1e3, :SLACK => 1e3, :INTRASTOR => 1e3, :INTERSTOR => 1e6, :FLOW => 1e3, :TRANS =>1e3, :LL => 1e6, :LE => 1e9)\nscale_result = run_opt(ts_clust_data,cep_data,optimizer;scale=scale)","category":"page"},{"location":"opt_cep/#Adding-another-variable-1","page":"Optimization Problem Formulation","title":"Adding another variable","text":"","category":"section"},{"location":"opt_cep/#","page":"Optimization Problem Formulation","title":"Optimization Problem Formulation","text":"Extend the default scale-dictionary in the src/optim_problems/run_opt-file to include the new variable as well.\nInclude the new variable in the problem formulation in the src/optim_problems/opt_cep-file. Reformulate the equations by dividing them by the scaling parameter of the first variable, which is scale[:COST] in the following example:\nscale[:COST]â‹…COST = 10â‹…scale[:CAP]â‹…CAP                  + 100\nâ‡”              COST = 10â‹…(scale[:CAP]/scale[:COST])â‹…CAP   + 100/scale[:COST]","category":"page"},{"location":"quickstart/#Quick-Start-Guide-1","page":"Quickstart","title":"Quick Start Guide","text":"","category":"section"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"This quick start guide introduces the main concepts of using CapacityExpansion. For more detail on the different functionalities that CapacityExpansion provides, please refer to the subsequent chapters of the documentation or the examples in the examples folder.","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"Generally, the workflow consists of three steps:","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"Data preparation of ClustData\nData preparation of OptDataCEP\nOptimization","category":"page"},{"location":"quickstart/#Example-Workflow-1","page":"Quickstart","title":"Example Workflow","text":"","category":"section"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"After CapacityExpansion and a Solver like e.g. Clp are installed, you can use them by saying:","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"using CapacityExpansion\nusing Clp\noptimizer=Clp.Optimizer # defines the optimizer used by CapacityExpansion","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"The first step is to load the time-series input data. The following example loads hourly wind, solar, and demand data for Germany (1 region) for the year 2016. The hourly input-data is split into periods with 24 elements, which equals days.","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"ts_input_data = load_timeseries_data_provided(\"GER_1\"; T=24, years=[2016])","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"The output ts_input_data is a ClustData data struct that contains the data and additional information about the data.","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"ts_input_data.data # a dictionary with the data.\nts_input_data.data[\"wind-germany\"] # the wind data (choose solar, `demand_electricity` as other options in this example)\nts_input_data.K # number of periods","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"The second step is to include the optimization data, which is not time-series depending.","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"cep_data = load_cep_data_provided(\"GER_1\")","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"The cep is a OptDataCEP data struct.","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"cep.region # the region of the input-data\ncep.costs # the information of costs as an `OptVariable` with 5 dimensions","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"The third step is to setup the model and run the optimization.","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"result = run_opt(ts_input_data,cep_data,optimizer)","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"The result is a OptResult data struct and contains the information of the optimization result.","category":"page"},{"location":"quickstart/#","page":"Quickstart","title":"Quickstart","text":"result.info[\"model\"] # the equations of the setup model\nresult.status # the status of the optimization\nresult.objective # the value of the objective\nresult.variables[\"CAP\"] # the newly installed and existing capacities of the different technologies along the nodes. Other options are \"COST\" (the costs) and \"GEN\" (the generation)\nresult.sets[\"tech\"][\"generation\"] # a `\"tech\"` (dimension) set of all `\"generation\"` (tech-group) within the model\nresult.config[\"generation\"] # Detailed model configuration","category":"page"},{"location":"preparing_clust_data/#Preparing-ClustData-1","page":"Preparing ClustData","title":"Preparing ClustData","text":"","category":"section"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"Here, we first describe how to load provided time-series input data or your own time-series input data as ClustData. We second describe how to aggregate the loaded time-sereis input data.","category":"page"},{"location":"preparing_clust_data/#Provided-Data-1","page":"Preparing ClustData","title":"Provided Data","text":"","category":"section"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"load_timeseries_data_provided() loads the data for a given region for which data is provided in this package. The optional input parameters to load_timeseries_data_provided() are the number of time steps per period T and the years to be imported.","category":"page"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"load_timeseries_data_provided","category":"page"},{"location":"preparing_clust_data/#CapacityExpansion.load_timeseries_data_provided","page":"Preparing ClustData","title":"CapacityExpansion.load_timeseries_data_provided","text":"    load_timeseries_data_provided(region::String=\"GER_1\"; T::Int=24, years::Array{Int,1}=[2016], att::Array{String,1}=Array{String,1}())\n\nAdding the information in the *.csv file at data_path to the data dictionary\n\nThe *.csv files shall have the following structure and must have the same length:\n\nTimestamp Year [column names...]\n[iterator] [year] [values]\n\nThe first column should be called Timestamp if it contains a time iterator The other columns can specify the single timeseries like specific geolocation. for regions:\n\n\"GER_1\": Germany 1 node\n\"GER_18\": Germany 18 nodes\n\"CA_1\": California 1 node\n\"CA_14\": California 14 nodes\n\"TX_1\": Texas 1 node\n\n\n\n\n\n","category":"function"},{"location":"preparing_clust_data/#Your-Own-Data-1","page":"Preparing ClustData","title":"Your Own Data","text":"","category":"section"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"For details refer to TimeSeriesClustering","category":"page"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"note: Note\nThe keys of {your-time-series}.data have to match \"{time_series (as declared in techs.csv)}-{node}\"","category":"page"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"load_timeseries_data","category":"page"},{"location":"preparing_clust_data/#TimeSeriesClustering.load_timeseries_data","page":"Preparing ClustData","title":"TimeSeriesClustering.load_timeseries_data","text":"function load_timeseries_data(data_path::String;\n                          region::String=\"none\",\n                          T::Int=24,\n                          years::Array{Int,1}=[2016],\n                          att::Array{String,1}=Array{String,1}())\n\nReturn all time series as ClustData struct that are stored as csv files in the specified path.\n\nLoads *.csv files in the folder or the file data_path\nLoads all attributes (all *.csv files) if the att-Array is empty or only the files specified in att\nThe *.csv files shall have the following structure and must have the same length:\n\nTimestamp Year [column names...]\n[iterator] [year] [values]\n\nThe first column of a .csv file should be called Timestamp if it contains a time iterator\nThe second column should be called Year and contains the corresponding year\nEach other column should contain the time series data. For one node systems, only one column is used; for an N-node system, N columns need to be used. In an N-node system, each column specifies time series data at a specific geolocation.\nReturns time series as ClustData struct\nThe .data field of the ClustData struct is a Dictionary where each column in [file name].csv file is the key (called \"[file name]-[column name]\"). file name should correspond to the attribute name, and column name should correspond to the node name.\n\nOptional inputs to load_timeseries_data:\n\nregion-region descriptor\nT- Number of Segments\nyears::Array{Int,1}= The years to be selected from the csv file as specified in years column\natt::Array{String,1}= The attributes to be loaded. If left empty, all attributes will be loaded.\n\n\n\n\n\nfunction load_timeseries_data(existing_data::Symbol;\n                          region::String=\"none\",\n                          T::Int=24,\n                          years::Array{Int,1}=[2016],\n                          att::Array{String,1}=Array{String,1}())\n\nReturn time series of example data sets as ClustData struct.\n\nThe choice of example data set is given by e.g. existing_data=:CEP-GER1. Example data sets are:\n\n:DAM_CA : Hourly Day Ahead Market Electricity prices for California-Stanford 2015\n:DAM_GER : Hourly Day Ahead Market Electricity prices for Germany 2015\n:CEP_GER1 : Hourly Wind, Solar, Demand data Germany one node\n:CEP_GER18: Hourly Wind, Solar, Demand data Germany 18 nodes\n\nOptional inputs to load_timeseries_data:\n\nregion-region descriptor\nT- Number of Segments\nyears::Array{Int,1}= The years to be selected from the csv file as specified in years column\natt::Array{String,1}= The attributes to be loaded. If left empty, all attributes will be loaded.\n\n\n\n\n\n","category":"function"},{"location":"preparing_clust_data/#Aggregation-1","page":"Preparing ClustData","title":"Aggregation","text":"","category":"section"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"Time series aggregation can be applied to reduce the temporal dimension while (if done problem specific correctly) keeping output precise. Aggregation methods are explained in TimeSeriesClustering High encouragement to run a second stage validation step if you use aggregation on your model. Second stage operational validation step","category":"page"},{"location":"preparing_clust_data/#Examples-1","page":"Preparing ClustData","title":"Examples","text":"","category":"section"},{"location":"preparing_clust_data/#Loading-time-series-data-1","page":"Preparing ClustData","title":"Loading time series data","text":"","category":"section"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"using CapacityExpansion\nstate=\"GER_1\"\n# load ts-input-data\nts_input_data = load_timeseries_data_provided(state; T=24, years=[2016])\nusing Plots\nplot(ts_input_data.data[\"solar-germany\"], legend=false, linestyle=:dot, xlabel=\"Time [h]\", ylabel=\"Solar availability factor [%]\")","category":"page"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"(Image: Plot)","category":"page"},{"location":"preparing_clust_data/#Aggregating-time-series-data-1","page":"Preparing ClustData","title":"Aggregating time series data","text":"","category":"section"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"ts_clust_data = run_clust(ts_input_data;method=\"kmeans\",representation=\"centroid\",n_init=50,n_clust=5).clust_data\nplot(ts_clust_data.data[\"solar-germany\"], legend=false, linestyle=:solid, width=3, xlabel=\"Time [h]\", ylabel=\"Solar availability factor [%]\")","category":"page"},{"location":"preparing_clust_data/#","page":"Preparing ClustData","title":"Preparing ClustData","text":"(Image: Plot)","category":"page"},{"location":"workflow/#Workflow-1","page":"Workflow","title":"Workflow","text":"","category":"section"},{"location":"workflow/#","page":"Workflow","title":"Workflow","text":"Here, we describe the general workflow in more detail.","category":"page"},{"location":"workflow/#","page":"Workflow","title":"Workflow","text":"The workflow for this package can be broken down to:","category":"page"},{"location":"workflow/#","page":"Workflow","title":"Workflow","text":"Data Preparation\nOptimization","category":"page"},{"location":"workflow/#Data-Preparation-1","page":"Workflow","title":"Data Preparation","text":"","category":"section"},{"location":"workflow/#","page":"Workflow","title":"Workflow","text":"The CEP needs two types of data","category":"page"},{"location":"workflow/#","page":"Workflow","title":"Workflow","text":"Time series data in the type ClustData - Preparing ClustData\nCost, node, (line), and technology data in the type OptDataCEP - Preparing OptDataCEP","category":"page"},{"location":"workflow/#","page":"Workflow","title":"Workflow","text":"They are kept separate as just the time series dependent data is used to determine representative periods (clustering).","category":"page"},{"location":"workflow/#","page":"Workflow","title":"Workflow","text":"(Image: Plot)","category":"page"},{"location":"workflow/#Example-Workflow-1","page":"Workflow","title":"Example Workflow","text":"","category":"section"},{"location":"workflow/#","page":"Workflow","title":"Workflow","text":"using CapacityExpansion\nusing Clp\noptimizer=Clp.Optimizer # select optimizer\n\n## LOAD DATA ##\n# laod ts-data\nts_input_data = load_timeseries_data_provided(\"GER_1\"; T=24, years=[2016])\n# load cep-data\ncep_data = load_cep_data_provided(\"GER_1\")\n\n## OPTIMIZATION ##\n# run a simple\nrun_opt(ts_input_data,cep_data,optimizer)","category":"page"},{"location":"homework/#Homework:-Modeling-Exercise-1","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"","category":"section"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Copyright 2019, Patricia Levi, Elias Kuepper, and contributors","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"note: Note\nThe corresponding files can be found in the folder [.../CapacityExpansion/teaching/](https://github.com/YoungFaithful/CapacityExpansion.jl/tree/dev/teaching)","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"MS&E 394 Spring 2019","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Advanced Methods in Modeling for Climate and Energy Policy at Stanford University","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Modeling Exercise: Capacity Expansion Planning","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Due: May 6, 2019, at 10pm","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"note: Note\nThis problem set serves to reinforce concepts from the class regarding capacity expansion modeling for electricity. It provides hands-on experience in understanding and interpreting the outputs of a typical capacity expansion problem and grappling with the inevitable modeling decisions that must be made. It also requires you to work through a command line interface and understand how to connect to a remote server, valuable skills for working with large models that are hosted beyond your laptop.","category":"page"},{"location":"homework/#Initial-instructions:-1","page":"Homework: Modeling Exercise","title":"Initial instructions:","text":"","category":"section"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"You may work with other students to run the model. However, you are expected to understand everything that is done, write up your own interpretations, and submit your own homework. If you do work together, please note that on your problem set.\nThe scripts homework_utilsjl and homework_templatejl contain the code you will need to run to complete this problem set. The first contains helper plotting functions. The second contains examples of the code you need to run to answer the questions below. You will need to add to the provided code to complete this homework, and you should submit a copy of your code along with your writeup.\nThis problem set should be written in such a way that you should not need any specific knowledge of Julia to complete it, although it will probably feel easier if you are comfortable with a scripting language. If you find that the contained instructions are insufficient please reach out.","category":"page"},{"location":"homework/#Modeling-tool:-Julia-1","page":"Homework: Modeling Exercise","title":"Modeling tool: Julia","text":"","category":"section"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Julia is a relatively new programming language that is quickly being adopted for a variety of uses due to its fast run times with large operations. It has a robust set of optimization packages that make it ideal for electricity optimization problems. Elias Kuepper and Holger Teichgraeber have developed a package for Julia that runs a classic capacity expansion model, which we will be using for this problem set.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"In order to run julia-code you can use a local julia installation on your computer","category":"page"},{"location":"homework/#Part-1:-Getting-Set-Up-1","page":"Homework: Modeling Exercise","title":"Part 1: Getting Set Up","text":"","category":"section"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Install julia via these instructions on your computer. This problem set is designed to run with a julia version 1.0 or higher. We also recommend to install the Juno-IDE.\nOpen Atom\nFile/Open Folder... (Ctr+Shift+O) and select your homework directory\nOpen the homework_template.jl-file and run it line by line (Shift+Enter). You can interactively have a look at the results and the plots will be shown within Atom.","category":"page"},{"location":"homework/#Overview-of-CapacityExpansion.jl-1","page":"Homework: Modeling Exercise","title":"Overview of CapacityExpansion.jl","text":"","category":"section"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"CapacityExpansion.jl is a package that runs a basic capacity expansion model as described in class. The documentation is available here. We are using it to model Germany using 2015 data. In this problem set, the package's integrated clustering algorithm selects 10 representative days to model the whole year. To begin, we will use it as a greenfield model with no transmission constraints, but it is capable of representing greater detail on these fronts.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"This model runs relatively quickly, although in some configurations it may take a few minutes to run. If you find it taking much longer (say, upwards of 10 minutes), chances are you don't need to do what you're doing (or your computer is running very slowly).","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"The main function you will be interacting with is run_opt(), which runs the capacity expansion problem. There are two sets of arguments given to this function, separated by a semicolon. The first set are unnamed arguments, and they include the timeseries data (ts_clust_data.clust_data), non-timeseries data (cep_data), and the type of optimizer to use. The second set are named (i.e. identified with argname= your argument value), and this is where we will be adjusting key parameters like the CO2 emissions limit, the transmission constraints, and the type of storage that is available. The descriptor argument is for identifying the results of that run in plots and charts, so please name it appropriately.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"There are two ways to run the code:","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Copy pasting the code from your code editor directly into the command line.\nOnce you have adjusted the code to your liking, save your edited code and upload it to farmshare, and then call include(\"homework\\_template.jl\") from Julia. The downside of this approach is that it may be harder to deal with errors, and you will have to download the plots to view them. The upside is that you can go make yourself a cup of coffee while the code runs.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Recommended to start with (1) and progress to (2) once you think your script does exactly what you want.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Overview of available plotting scripts","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"There are three plotting scripts available to help visualize your results. They each create a bar chart and save it, and they display the underlying data for the plot and save that as a csv. They will save their output in the directory in which you are running Julia (if you followed the farmshare instructions above, that's your home directory). The provided script shows how to use them. They all take, as a first argument, an array of model results created like this:","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"results = [modelresult1, modelresult2, modelresult3]","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"As a second argument, they all take an output name that will be used to name the .png-file of the plot and the .csv-file saved by the function. They all save a .png-file of the plot and a .csv-file of the plotted data by default.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"plotgen()","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"plots the total generation over the whole year from different resources","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"plotcapacity()","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"plots the total installed capacity by generation type","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"plotcost()","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"plots the cost of operating the system for the whole year.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"General workflow","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"For each part below, we will follow the following workflow:","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Adjust technology costs if needed (only in the sensitivities section) by creating a new version of the cep\\_data variable and providing that to run\\_opt() when you call it.\nRun the model several times with different parameter values\nCombine the results together that we wish to compare\nPlot them and inspect the results","category":"page"},{"location":"homework/#Part-2-â€“-Comparing-Policies-1","page":"Homework: Modeling Exercise","title":"Part 2 â€“ Comparing Policies","text":"","category":"section"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"A policy maker in Germany wants set a CO2 emissions rate limit for their electricity sector for 2050, but they are not sure what level to set. They need you to help them understand the impacts of different possible limits. The highest rate they are considering is 500 kg-CO2 e/MWh, and the lowest is 10 kg-CO2e/MWh. They would like to better understand the tradeoffs between a tighter cap and greater costs.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Run the model for several different levels of emissions rate limits (the code is set up to do three, but you may do more), and describe how cost, capacity, and generation shift with tighter caps. Include any data or plots needed to make your point","category":"page"},{"location":"homework/#Part-3-â€“-Testing-Assumptions-1","page":"Homework: Modeling Exercise","title":"Part 3 â€“ Testing Assumptions","text":"","category":"section"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"The model we are running makes several simplifying assumptions. By default it assumes a greenfield model with no transmission constraints. Before proceeding with our study, we should test a few key assumptions.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"First test the greenfield assumption, which allows the model to build the electricity system from scratch, without considering existing generation. Compare the results with and without existing infrastructure by setting","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"infrastructure=Dict{String,Array}(\"existing\"=>[\"all\"])","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"instead of the default, where only demand is existing","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"infrastructure=Dict{String,Array}(\"existing\"=>[\"demand\"])","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"inside of the model call. You may choose to compare this run with one of the ones done in part 2, but be sure to use the same emissions limit.  Describe the effect, and include any data or plots needed to make your point. Argue whether it makes more sense to run a greenfield or a brownfield model, and use that assumption for the rest of your simulations.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Next, test the transmission assumption.  The first simulations did not include transmission constraints. Compare the results with and without transmission by setting","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"transmission = true #or false","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"inside of the model call (false is the default). You may choose to compare this run with one of the ones done in part 2, but be sure to use the same emissions limit. Discuss the effect of including transmission constraints and argue whether the gain in realism is worth the cost in increased computational complexity, and include any data or plots needed to make your point. Use the better assumption for the rest of your simulations.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"note: Note\nThere are no right or wrong choices here. We are looking for a reasonable explanation of your choice, and an understanding of the pros, cons, and potential impact on your results.","category":"page"},{"location":"homework/#Part-4-â€“-Storage-Sensitivities-1","page":"Homework: Modeling Exercise","title":"Part 4 â€“ Storage Sensitivities","text":"","category":"section"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"The policymaker who has posed this question to you is very interested in R&amp;D for battery technology, and is quite the technological optimist regarding their potential. They are curious how declines in storage costs might affect these results. Keep in mind that the effect may be different at different levels of emissions cap stringency.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"First, test the effect of including storage in the model by setting","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"storage_type = \"simple\"\nconversion = true","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"inside of the model call and keeping this setting for the remainder of this part. This setting makes batteries and hydrogen storage available. Compare the results of this simulation to a previous simulation and comment on the effect, and include any data or plots needed to make your point.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Next, test the effect of declines in the cost of battery storage costs â€“ simulate a range of cost declines. Describe how they affect the outcomes of a relatively high CO2 cap and a relatively low CO2 cap, and include any data or plots needed to make your point.\nFinally, test the effect of declines in the cost of hydrogen storage costs â€“ simulate a range of cost declines. Describe how they affect the outcomes of a relatively high CO2 cap and a relatively low CO2 cap, and include any data or plots needed to make your point.","category":"page"},{"location":"homework/#Part-5-â€“-Final-Analysis-1","page":"Homework: Modeling Exercise","title":"Part 5 â€“ Final Analysis","text":"","category":"section"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"Write a short summary of your recommendations to the policy maker. Describe your findings as they may be relevant to the policy-maker's given interests, including key differences between the options, describing the impact of important uncertainties, and noting any key limitations to your study. Conduct any final simulations, if you feel there is some combination of parameters that would be useful to explore.","category":"page"},{"location":"homework/#","page":"Homework: Modeling Exercise","title":"Homework: Modeling Exercise","text":"note: Note\nThe question is intended to be broad and open-ended, as this type of broad synthesis is a key part of policy analysis. Use your best judgment to provide insight to this policy-maker, telling them the key features from your results that will inform their upcoming decisions. We are looking for a clear and cogent explanation of a few key results, explained in a way that a non-technical person could understand.","category":"page"},{"location":"#![CapacityExpansion-logo](assets/cep_text.svg)-1","page":"Introduction","title":"(Image: CapacityExpansion logo)","text":"","category":"section"},{"location":"#","page":"Introduction","title":"Introduction","text":"(Image: ) (Image: ) (Image: Build Status)","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"CapacityExpansion is a julia implementation of a input-data-scaling, multi-sector capacity expansion modeling framework.","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"The main purpose of the package is providing an extensible, simple-to-use generation and transmission capacity extension model that allows to address a diverse set of research questions in the area of energy systems planning. The secondary purposes are:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"Providing a simple process to integrate (clustered) time-series input data, geographical input data, cost input data, and technology input data.\nProviding a model configuration, a modular model setup and model optimization.\nProviding an interface between the optimization result and further analysis.","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"Model Information \nModel class Capacity Expansion Problem\nModel type Optimization, Linear optimization model input-data depending energy system\nCarriers Electricity, Hydrogen, ...\nTechnologies dispathable and non-dispathable Generation, Conversion, Storage (seasonal), Transmission\nDecisions investment and dispatch\nObjective Total system cost\nVariables Cost, Capacities, Generation, Storage, Lost-Load, Lost-Emissions","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"Input Data Depending Provided Input Data\nRegions California, USA (single and multi-node) and Germany, Europe (single and multi-node)\nGeographic Resolution aggregated regions\nTime resolution hourly\nNetwork coverage transmission, DCOPF load flow","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"The package uses TimeSeriesClustering as a basis for its time-series aggregation.","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"This package is developed by Elias Kuepper @YoungFaithful and Holger Teichgraeber @holgerteichgraeber.","category":"page"},{"location":"#Installation-1","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"#","page":"Introduction","title":"Introduction","text":"This package runs under julia v1.0 and higher. It depends on:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"JuMP.jl - for the modeling environment\nCSV.jl - for handling of .csv-Files\nDataFrames.jl - for handling of tables\nStatsBase.jl - for handling of basic  \nJLD2.jl - for saving your result data\nFileIO.jl - for file accessing\nTimeSeriesClustering.jl - for time-series data","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"using Pkg\nPkg.add(\"CapacityExpansion\")","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"A solver is required to run an optimization as explained in section Solver. Install e.g.:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"using Pkg\nPkg.add(\"Clp\")","category":"page"}]
}
